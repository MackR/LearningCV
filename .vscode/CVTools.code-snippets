{
	// Place your LearningCV workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"ScanImage": {
		"prefix": "scanImage",
		"body": [
		"typedef uchar PIXEL_T;",
		"PIXEL_T pixel = 0;",
		"const int AREA_FILTER = 100;",
    	"for (int row = 0; row < proc1.rows; ++row){",
			"\tfor (int col = 0; col < proc1.cols; ++col){",
				"\t\tpixel = proc1.at<PIXEL_T>(col,row);",
            	"\t\tint area = 0;",
            	"\t\tif (pixel == 255){",
					"\t\t\tarea = cv::floodFill(proc1,cv::Point(col,row),100);",
                	"\t\t\tif (area < AREA_FILTER){",
						"\t\t\t\tcv::floodFill(proc1,cv::Point(col,row),0);",
					"\t\t\t}",
                	"\t\t\tcv::imshow(\"proc1\",proc1);",
                	"\t\t\tcv::waitKey(0);",
				"\t\t}",
			"\t}",
    	"}"
		],
		"description": "Log output to console"
	}

	
}